/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ShrubberyCreationForm.cpp                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: jgomes-c <jgomes-c@student.42sp.org.br>    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2022/11/05 12:39:40 by lpaulo-d          #+#    #+#             */
/*   Updated: 2023/03/03 02:35:18 by jgomes-c         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "ShrubberyCreationForm.hpp"

ShrubberyCreationForm::ShrubberyCreationForm(void) : AForm("ShruberryForm", 
145, 137), _target("Art")
{
	return;
}

ShrubberyCreationForm::ShrubberyCreationForm(std::string target) : 
AForm("ShruberryForm", 145, 137), _target(target)
{
	return;
}

ShrubberyCreationForm::ShrubberyCreationForm(ShrubberyCreationForm const &rhs) : AForm("ShruberryForm", 145, 137)
{
	*this = rhs;
	return;
}

ShrubberyCreationForm::~ShrubberyCreationForm(void)
{
	return;
}

ShrubberyCreationForm &ShrubberyCreationForm::operator=(ShrubberyCreationForm const &rhs)
{
	this->_target = rhs._target;
	return (*this);
}

void ShrubberyCreationForm::execute(Bureaucrat const &executor) const
{
	if (this->mayExecute(executor) == false)
		return;
	std::string nameFile = this->_target + "_shrubbery";
	std::ofstream file;
	file.open(nameFile.c_str(), std::ofstream::out | std::ofstream::trunc);
	if (!file.is_open())
	{
		std::cout << "Something wrong creating the _shrubbery file" << std::endl;
		file.close();
		return;
	}

	file
		<< "              _{\\ _{\\{==}/}/}__                                              _{\\ _{\\{==}/}/}__                    \n"
		<< "             {/{==}{/{==}(\\}{==} _					                         {/{==}{/{==}(\\}{==} _					 \n"
		<< "            {/{==}{/{==}(_)\\}{/{==}  _				                        {/{==}{/{==}(_)\\}{/{==}  _				 \n"
		<< "         {\\{/(\\}\\}{/{==}\\}{/){==}\\} ==}				                 {\\{/(\\}\\}{/{==}\\}{/){==}\\} ==}		 \n"
		<< "        {/{/(_)/}{\\{/)\\}{\\(_){/}/}/}/}				                {/{/(_)/}{\\{/)\\}{\\(_){/}/}/}/}			 \n"
		<< "       _{\\{/{/{\\{/{/(_)/}/}/}{\\(/}/}/}				               _{\\{/{/{\\{/{/(_)/}/}/}{\\(/}/}/}			 \n"
		<< "      {/{/{\\{\\{\\(/}{\\{==}/}{\\}(_){==}\\}				          {/{/{\\{\\{\\(/}{\\{==}/}{\\}(_){==}\\}		 \n"
		<< "      _{\\{/{\\{/(_)\\}/}{/{/{==}\\})\\}{==}				              _{\\{/{\\{/(_)\\}/}{/{/{==}\\})\\}{==}		 \n"
		<< "     {/{/{\\{\\(/}{/{\\{\\{==})/}{\\(_)/}/}\\}				         {/{/{\\{\\(/}{/{\\{\\{==})/}{\\(_)/}/}\\}		 \n"
		<< "      {\\{==}(_){\\{\\{==}/}(_){==}{==}/})/}				              {\\{==}(_){\\{\\{==}/}(_){==}{==}/})/}		 \n"
		<< "       {/{\\{==}{/{\\{\\{==}/}{\\{==}/}\\}(_)				           {/{\\{==}{/{\\{\\{==}/}{\\{==}/}\\}(_)		 \n"
		<< "      {/{\\{==}{/){\\{\\{==}/}{\\{\\(/}/}\\}/}				          {/{\\{==}{/){\\{\\{==}/}{\\{\\(/}/}\\}/}		 \n"
		<< "       {/{\\{==}(_){\\{\\{\\(/}/}{\\(_)/}/}\\}				           {/{\\{==}(_){\\{\\{\\(/}/}{\\(_)/}/}\\}		 \n"
		<< "         {/({/{\\{/{\\{==}(_){==}/}\\}/}(\\}				                 {/({/{\\{/{\\{==}(_){==}/}\\}/}(\\}		 \n"
		<< "          (_){/{==}{\\{==}/}{\\{\\)/}/}(_)				                  (_){/{==}{\\{==}/}{\\{\\)/}/}(_)			 \n"
		<< "            {/{/{\\{==}{/{\\{\\{\\(_)/}					                    {/{/{\\{==}{/{\\{\\{\\(_)/}				 \n"
		<< "             {/{\\{\\{==}/}{\\{==}/}						                     {/{\\{\\{==}/}{\\{==}/}				 \n"
		<< "              {){/ {==}{==} \\}\\}						                      {){/ {==}{==} \\}\\}					 \n"
		<< "              (_)  \\.-..-/							                          (_)  \\.-..-/							 \n"
		<< "          __...--- |.-.-.| --...__					                      __...--- |.-.-.| --...__					 \n"
		<< "   _...--    .-.   |.-.-.|  . -.   --..__			               _...--    .-.   |.-.-.|  . -.   --..__			 \n"
		<< " -     . .  . .    |..-._| .  . .  .   jgc		                 -     . .  . .    |..-._| .  . .  .   jgc	\n	"
		<< " .  .-  .    .--.  | .-..|    .  .  . .				             .  .-  .    .--.  | .-..|    .  .  . .				 \n"
		<< "          . ..     |.-_.-|							                      . ..     |.-_.-|							 \n"
		<< "  .  .  .       _.-|-._ -|-._  .  .  .				              .  .  .       _.-|-._ -|-._  .  .  .				 \n"
		<< "              ..   |.- .-|   ..						                          ..   |.- .-|   ..						 \n"
		<< "  ..-.   . .  ..   `-._.-o   ..  .  - .				              ..-.   . .  ..   `-._.-o   ..  .  - .				 \n"
		<< "   .-. .        ... . . . . -.     .  .				               .-. .        ... . . . . -.     .  .				 \n"
		<< "        .      ~,										                .      ~,									 \n"
		<< "    .       .   |\\   .    . .-.						                .       .   |\\   .    . .-.					 \n";

	file.close();
	std::cout << "ASCII trees created" << std::endl;
	return;
}
